- name: Jenkins
  hosts: 127.0.0.1
  sudo: yes
  vars:
    jenkins_hostname: localhost
    jenkins_http_port: 8080
    jenkins_jar_location: /opt/jenkins-cli.jar
    jenkins_plugins:
      - greenballs
      - git
      - robot
      - simple-theme-plugin
      - workflow-aggregator
      - workflow-api
      - workflow-basic-steps
      - workflow-cps
      - workflow-cps-global-lib
      - workflow-durable-task-step
      - workflow-job
      - workflow-scm-step
      - workflow-step-api
      - workflow-support
    jenkins_url_prefix: ""

    jenkins_admin_email_address: info@kitconcept.com
    jenkins_url: jenkins.kitconcept.com
    jenkins_user: jenkins

  roles:
    - cmprescott.xml

  tasks:

    # Set Hostname
    # - hostname: name=jenkins.mycompany.com

    # Nginx
    - name: Install Nginx
      apt: name=nginx state=installed
      notify: Restart nginx

    - name: Remove Nginx default configuration
      file: path=/etc/nginx/sites-enabled/default state=absent
      notify: Restart nginx

    - name: Add Jenkins Nginx configuration to sites-available
      template: src=etc/nginx.txt dest=/etc/nginx/sites-available/jenkins owner=root group=root mode=0755

    - name: Add Jenkins Nginx configuration to sites-enabled
      file: path=/etc/nginx/sites-enabled/jenkins state=link src=/etc/nginx/sites-available/jenkins
      notify: Restart nginx

    # Install Jenkins
    - name: Install Jenkins prerequisits
      apt: pkg=python-pycurl state=installed

    - name: Add Jenkins apt repository key
      apt_key:
        url=http://pkg.jenkins-ci.org/debian-stable/jenkins-ci.org.key
        state=present

    - name: Add Jenkins apt repository
      apt_repository:
        repo='deb http://pkg.jenkins-ci.org/debian-stable binary/'
        state=present
        update_cache=yes

    - name: Install Jenkins
      apt: pkg=jenkins state=installed

    - name: Configure Jenkins user home directory
      user: name=jenkins home=/var/lib/jenkins

    - name: Start Jenkins
      shell: /etc/init.d/jenkins start

    - name: Wait for Jenkins to start up before proceeding
      shell: "curl -D - --silent http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/cli/"
      register: result
      until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
      retries: 5
      delay: 60
      changed_when: false

    - name: Create .jenkins directory
      file:
        path=/var/lib/jenkins/.jenkins
        state=directory
        mode=0755
        owner=jenkins
        group=jenkins

    - name: Create jenkins.model.JenkinsLocationConfiguration.xml
      template:
        src=etc/jenkins.model.JenkinsLocationConfiguration.xml
        dest=/var/lib/jenkins/.jenkins/jenkins.model.JenkinsLocationConfiguration.xml
        owner={{jenkins_user}}
        group={{jenkins_user}}

    - name: Configure admin email address
      xml:
        file: /var/lib/jenkins/.jenkins/jenkins.model.JenkinsLocationConfiguration.xml
        xpath: /jenkins.model.JenkinsLocationConfiguration/adminAddress
        value: "{{jenkins_admin_email_address}}"

    - name: Configure Jenkins URL
      xml:
        file: /var/lib/jenkins/.jenkins/jenkins.model.JenkinsLocationConfiguration.xml
        xpath: /jenkins.model.JenkinsLocationConfiguration/jenkinsUrl
        value: "{{jenkins_url}}"


#    - name: Configure Mail settings
#      xml: file=/var/lib/jenkins/.jenkins/config.xml xpath=/business/rating value=11

#    - name: Configure jenkins
#      sudo: yes
#      template:
#        src=etc/jenkins_config.xml.j2
#        dest=/var/lib/jenkins/config.xml
#      notify:
#        - 'Restart Jenkins'

#    - name: Configure jenkins location
#      sudo: yes
#      template:
#        src=etc/jenkins_location.xml.j2
#        dest=/var/lib/jenkins/jenkins.model.JenkinsLocationConfiguration.xml
#      notify:
#        - 'Restart Jenkins'

#    - name: Configure jenkins theme
#      sudo: yes
#      template:
#        src=jenkins_simple_theme.xml.j2
#        dest=/var/lib/jenkins/org.codefirst.SimpleThemeDecorator.xml
#      notify:
#        - 'Restart Jenkins'

    # Jenkins CLI
    - name: Get the jenkins-cli jarfile from the Jenkins server
      get_url:
        url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/jnlpJars/jenkins-cli.jar"
        dest: "{{ jenkins_jar_location }}"
      register: jarfile_get
      until: "'OK' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
      retries: 5
      delay: 10

    # Jenkins Plugins
    - name: Create Jenkins updates folder.
      file:
        path: /var/lib/jenkins/updates
        owner: jenkins
        group: jenkins
        mode: 0755
        state: directory

    - name: Update Jenkins plugin data.
      shell: >
        curl -L https://updates.jenkins-ci.org/update-center.json | sed '1d;$d' > /var/lib/jenkins/updates/default.json
        creates=/var/lib/jenkins/updates/default.json
    - name: Permissions for default.json updates info.
      file:
        path: /var/lib/jenkins/updates/default.json
        owner: jenkins
        group: jenkins
        mode: 0755

    - name: Install Jenkins plugins.
      command: >
        java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix | default('') }}/ install-plugin {{ item }}
        creates=/var/lib/jenkins/plugins/{{ item }}.jpi
      with_items: jenkins_plugins
      notify: restart jenkins

    - name: start jenkins
      shell: /etc/init.d/jenkins restart

    # Jenkins Jobs
    - name: Install PIP
      apt: pkg=python-pip state=installed
    - name: Install Jenkins Job Builder
      pip: name=jenkins-job-builder

    # - name: Create Jenkins Pipeline job
    #   shell: jenkins-jobs test pipeline.yaml


  handlers:

    - name: Restart ssh
      action: service name=ssh state=restarted

    - name: Restart nginx
      action: service name=nginx state=reloaded

    - name: restart jenkins
      action: service name=jenkins state=restarted
